\documentclass{article}
\usepackage{color}
\definecolor{BiocBlue}{RGB}{24,129,194}
\usepackage[
  colorlinks, linkcolor=BiocBlue, citecolor=BiocBlue,
  anchorcolor=BiocBlue, urlcolor=BiocBlue
]{hyperref}
\usepackage{todonotes}
\usepackage{booktabs}
\usepackage[margin=1in]{geometry}
\usepackage[
  maxbibnames=99,backend=biber,citestyle=authoryear,sorting=ydnt
]{biblatex}
\def\Rpkg#1{\textit{#1}}
\addbibresource{gdcCitations.bib}
\title{\Biocpkg{GenomicDataCommons}: a Bioconductor Interface to the NCI Genomic Data Commons}
\author{Martin T. Morgan\thanks{martin.morgan@roswellpark.org}\\
	Roswell Park Cancer Institute \\
	\and 
	Sean R. Davis\thanks{seandavi@gmail.com, to whom correspondence should be addressed}  \\
	Center for Cancer Research\\
        National Cancer Institute\\
        National Institutes of Health\\
	}


\date{\today}

\def\code#1{\texttt{#1}}

\include{header.tex}

\newcommand{\Bioconductor}{\emph{Bioconductor}}
\newcommand{\R}{\emph{R}}
\newcommand\Biocpkg[1]{
  {\href{http://bioconductor.org/packages/#1}%
  {\emph{#1}}}}
\newcommand{\GDC}{\Biocpkg{GenomicDataCommons}}

\begin{document}

\maketitle

<<init,results='hide',echo=FALSE>>=
library(knitr)
opts_chunk$set(warning=FALSE,message=FALSE,results='hide', cache=FALSE)
suppressPackageStartupMessages({
    library(GenomicDataCommons)
    library(BiocPkgTools)
    pkglist = BiocPkgTools::biocPkgList()
    dlstats = BiocPkgTools::biocDownloadStats()
})
@ 


\Sexpr{ files() %>% count() }

\begin{abstract}
  The National Cancer Institute (NCI) Genomic Data Commons
  (\cite{Grossman2016}, \url{https://gdc.cancer.gov/}) provides the
  cancer research community with an open and unified repository for
  sharing and accessing data from \Sexpr{ projects() %>% count() }
  projects and contributed by \Sexpr{ cases() %>% count()} research
  participants. The \Bioconductor{} project \parencite{Huber2015}
  is an open source and open development software project built on the
  \R{} statistical programming environment \parencite{RCoreTeam2016}.
  A major goal of the \Bioconductor{} project is to facilitate the
  use, analysis, and comprehension of genomic data.  The \GDC{}
  \Bioconductor{} package provides basic infrastructure for querying,
  accessing, and mining genomic datasets available from the GDC. We
  expect that the \Bioconductor{} developer and user communities
  will build on the \GDC{} package to add higher-level functionality
  and expose cancer genomics data to many state-of-the-art
  bioinformatics methods available in \Bioconductor{}.
  
  \textbf{Availability}:
  \url{https://bioconductor.org/packages/GenomicDataCommons} \& \url{https://github.com/seandavi/GenomicDataCommons}.

\end{abstract}

\section{Introduction}


Basic and translational cancer research projects -- from large,
multicenter consortia to individual labs -- now produce vast
quantities of genomic data. Such datasets are ideally accompanied by
extensive phenotypic and clinical information and valuable
experimental metadata. To address the needs of the cancer community to
access, query, and utilize these cancer-related data resources, the
NCI has developed the Genomic Data Commons (GDC,
\cite{Grossman2016}). The GDC is similar to other large-scale genomics
data repositories, while in addition providing data that have been
`harmonized' using stardard, publicly-available pipelines\footnote{See
  \url{https://docs.gdc.cancer.gov/Data/Introduction/} for
  details.}.

The \Bioconductor{} project is an open source and open development
software project for the analysis and comprehension of genomic and
molecular biology data \parencite{Huber2015}. Based in the statistical
programming language, \R{} \parencite{RCoreTeam2016}, the project
comprises \Sexpr{ nrow(pkglist) } interoperable software packages contributed by a
diverse community of scientists. Several \Bioconductor{} provide
access to cancer genomics data (e.g., \Biocpkg{RTCGA}
\parencite{Kosinski2016}, \Biocpkg{TCGABiolinks}
\parencite{Colaprico2016}, \Biocpkg{RTCGAToolbox}
\parencite{Samur2014}) but they are focused, primarily, on TCGA data
and, in some cases, rely on legacy data sharing platforms. The \GDC{}
software package provides infrastructure for finding, accessing, and
downloading cancer genomics data from the NCI GDC. Our expectation is
that the \GDC{} package will facilitate use of GDC data by the larger
\Bioconductor{} community and increase the effiency of drawing
biologically important conclusions from published cancer genomic data.

\section{Design and Usage}

The goal of the \GDC{} \Bioconductor{} package is to expose the GDC
RESTful application programming interface
(API\footnote{\url{https://docs.gdc.cancer.gov/API/Users_Guide/Getting_Started/}})
to \Bioconductor{} users via an \R{} client interface. The \GDC{}
package supports both the metadata query and data download
capabilities of the GDC API. The \GDC{} package is implemented as a
set of S3 classes and methods with accompanying utility functions.


<<tab,echo=FALSE,results='asis'>>=
ent = as.character(GenomicDataCommons:::.gdc_entities)
short_desc = c(projects="Projects",
               cases="Cases and samples",
               files="Data files",
               annotations="Additional metadata annotations",
               ssms="Simple somatic mutations",
               cnvs="Copy number variations",
               ssm_occurrences="Mapping between somatic mutation mappings",
               cnv_occurrences="Mapping between samples and CNVs",
               genes="Gene models used throughout the GDC")
res = tibble::tibble(
    Collection=as.character(ent),
    Description=short_desc[as.character(ent)],
    `Categories of Data`=sapply(ent, function(x) length(available_expand(x))),
    `Total Fields`=sapply(ent, function(x) length(available_fields(x))),
                 )
knitr::kable(res, caption="The Genomic Data Commons API includes separate collections for each of several data types. Each collection offers logically grouped categories of related data that can limit or expand on returned results. Fields ", label = "tab:avail", row.names=FALSE, booktabs=TRUE)
@ 

\Sexpr{nrow(res)}

\subsection{Usage}

Finding data in the GDC starts with constructing a query of available
metadata. We model our \R{} interface for querying GDC metadata on a
common approach, using pipes to connect functional methods. This is
similar to the approach used by popular packages such as \Rpkg{dplyr}
\parencite{Wickham2016}. Querying the GDC API to get the unique file
ids of all HTSeq-quantified gene expression data from the TCGA-GBM
project forms an illustrative example:
%%
<<metaquery1,results='hide'>>=
library(GenomicDataCommons)
file_records = files() %>% 
    filter(
        cases.project.project_id == 'TCGA-GBM' &
        data_type == 'Gene Expression Quantification' &
        analysis.workflow_type == 'HTSeq - Counts'
    ) %>% 
        select(default_fields('files')) %>%
        response_all()
@ 

The \code{files()} call creates a \code{GDCquery}. The \code{filter()}
verb allows \R-like syntax to generate filter criteria (that are then
translated to an \R{} list); note that field names like ``data\_type''
can be used as \R{} names using `non-standard' evaluation. The
\code{select()} verb then sets the return fields, which, in this case
are limited to the GDC-specified \code{default\_fields}. Up to this
point, no data have been retrieved from the GDC. The
\code{response\_all()} call performs the actual metadata retrieval,
returning a \code{GDCResponse} object.

The GDC API also supports simple aggregation based on metadata fields,
such as the number of cases summarized by GDC project.
%%
<<agg,results='hide'>>=
cases_by_project = cases() %>% 
    facet('project.project_id') %>%
    aggregations()
head(cases_by_project)
@ 

\subsection{Downloading data}

Downloading single files or multiple small files is supported directly
from \R.  For larger sets of files or single large files, we use the
GDC data transfer tool and a `manifest' file. As an example, to create
a manifest from the file records collected above, we use the
\code{manifest()} verb.

<<createManifest,results='hide'>>=
manifest_df = file_records %>% manifest()
@ 

The \code{transfer()} function can use the GDC transfer client (a
separate command-line tool) to perform robust, performant download of data.
The resulting files are then available for processing in R or another 
preferred analysis environment.

\subsection{BAM file slicing}

The BAM file is the current standard for storing reads aligned against
a reference. Many use cases for these alignments require only a
particular genomic region rather than all alignments.  BAM `slicing'
is implemented as a basic wrapper upon which developers can build
functionality.
%% 
<<bamslice,results="hide">>=
# get 10 RNA-seq BAM files
file_ids = files() %>% 
    filter(
       ~ data_format=='BAM' & experimental_strategy=='RNA-Seq'
    ) %>% response() %>% ids()
@ 
%%
The file ids, all associated with aligned BAM files, can be used for
region-based slicing.
%%
<<slicing,eval=FALSE>>=
# An access token from the GDC is needed here
# for the the controlled-access BAM files.
bamfile = slicing(
    file_ids[1], regions = 'chr17:74000000-76000000', token=gdc_token()
)
@ 
%%
The resulting BAM file, with the file name \code{bamfile}, can be
accessed using any of the standard \Bioconductor{} tools for working with
aligned reads in BAM format (see, e.g., \Biocpkg{GenomicAlignments}).

\section{Conclusions}

The GDC is a robust and modern iteration of a genomic data repository from the
NCI. The GDC offers excellent web-based query interfaces and a growing
number of web-based tools for interacting with data. The \GDC{}
package provides bioinformatics and genomic data scientists with
programmatic tools that enable statistical analysis, version control,
and principles of reproducible computational research
\parencite{Sandve2013}. The availability of \GDC{} in \Bioconductor{}
provides a large, innovative community of researchers and software
developers, many of whom focus on cancer research, ready access to the
rich data resources of the GDC. The reproducibility, interoperability,
usability, sustainability, and continuous integration that are
intrinsic to \Bioconductor{}, combined with a plethora of existing
tools, have produced a multiplier effect for software contributed to
the project, making it an excellent environment for cancer genomic
data science. The \GDC{} package forms the foundation to build and
rapidly iterate on innovative tools for the analysis and comprehension
of cancer genomics datasets available at the NCI GDC.

\printbibliography

\section*{Supplementary Material}
\beginsupplement

<<downloadstats,echo=FALSE,fig.height=4.5,fig.cap=sprintf("This plot displays the number of distinct downloads per month from the Bioconductor website (based on IP address uniqueness). Download data retrieved %s.",Sys.Date())>>=
library(ggplot2)
x = subset(dlstats,Package=='GenomicDataCommons' & Month!='all')
ggplot(x,aes(x=Date,y=Nb_of_distinct_IPs)) + geom_bar(stat='identity') + ylab('Downloads') + ggtitle('Distinct user downloads per month') + theme_bw()

@
\begin{table}
\begin{center}
\begin{tabular}{ |c|c|c| } 
 \hline
 cell1 & cell2 & cell3 \\ 
 cell4 & cell5 & cell6 \\ 
 cell7 & cell8 & cell9 \\ 
 \hline
\end{tabular}
\caption{Table to test captions and labels.}
\label{table:1}
\end{center}
\end{table}


\end{document}
